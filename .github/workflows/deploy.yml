name: Portfolio Web Auto Deploy Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.6'
          channel: stable
          cache: true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ${{ runner.tool_cache }}/flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Restore firebase_options.dart | constants.dart
        run: |
          mkdir -p lib
          echo "${{ secrets.FIREBASE_OPTIONS_DART }}" | base64 -d > lib/firebase_options.dart
          echo "${{ secrets.CONSTANTS_ENCODED_DART }}" | base64 -d > lib/core/constants.dart

      - name: Install dependencies
        run: flutter pub get

      - name: Enable web support
        run: flutter config --enable-web

      - name: Build web app
        run: flutter build web --release --base-href "/portfolio/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: build/web

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Download GitHub Pages artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

#  create-release:
#    runs-on: ubuntu-latest
#    needs: deploy
#    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Get current date
#        id: date
#        run: echo "date=$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_OUTPUT
#
#      - name: Create Release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: "deploy-${{ steps.date.outputs.date }}"
#          release_name: "Portfolio Deployment ${{ steps.date.outputs.date }}"
#          body: |
#            ðŸš€ **Portfolio Successfully Deployed!**
#
#            **Live Site:** https://${{ github.repository_owner }}.github.io/portfolio/
#
#            **Deployment Details:**
#            - Branch: ${{ github.ref_name }}
#            - Commit: ${{ github.sha }}
#            - Deployed at: ${{ steps.date.outputs.date }}
#
#            **Changes in this deployment:**
#            ${{ github.event.head_commit.message }}
#
#            ---
#            *This release was automatically created by GitHub Actions*
#          draft: false
#          prerelease: false
